{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNEsZ+tlY2D3d8dp+KDKVX6"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["#@title 1. Install the libraries\n","%%bash\n","pip install --upgrade pip &> /dev/null\n","pip install farm-haystack[colab] &> /dev/null\n","pip install PyPDF2 &> /dev/null\n","pip install spacy &> /dev/null"],"metadata":{"id":"PsBm2FZ1VQCn","executionInfo":{"status":"ok","timestamp":1676958477011,"user_tz":-660,"elapsed":22992,"user":{"displayName":"Yawei Chen","userId":"05701676499302936873"}},"cellView":"form"},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["#@title 2. Preparing Document\n","import PyPDF2\n","import spacy\n","import os\n","from haystack.document_stores import InMemoryDocumentStore\n","from haystack.nodes import BM25Retriever\n","from haystack.nodes import FARMReader\n","from haystack.pipelines import ExtractiveQAPipeline\n","from haystack.utils import print_answers\n","from pprint import pprint\n","from google.colab import files\n","\n","uploaded = files.upload()\n","for filename in uploaded.keys():\n","  if not filename.endswith('.pdf'):\n","    raise ValueError('Invalid file format. Only PDF files are accepted.')\n","    \n","file_name = next(iter(uploaded))\n","doc_dict = []\n","nlp = spacy.load(\"en_core_web_sm\")\n","\n","def sentences_to_dict(text):\n","  doc = nlp(text)\n","  sentences = [sent.text for sent in doc.sents]  \n","\n","  for sentence in sentences:\n","      sentence_dict = {\n","        \"content\": sentence,\n","        \"meta\": {\"name\": file_name}\n","        }\n","      doc_dict.append(sentence_dict)\n","\n","def clean_sentences(text):\n","  text = text.replace(\"\\r\", \"\")\n","  text = text.replace(\"\\n\", \"\")\n","  text = text.replace(\"\\t\", \"\")\n","  return text\n","\n","def read_pdf(file_name):\n","  pdf_file = open(file_name, \"rb\")\n","  pdf_reader = PyPDF2.PdfReader(pdf_file)\n","  num_pages = len(pdf_reader.pages)\n","  pdf_text = \"\"\n","  for i in range(num_pages):\n","      pdf_page = pdf_reader.pages[i]\n","      pdf_text += clean_sentences(pdf_page.extract_text())\n","  pdf_file.close()\n","  return(pdf_text)\n","\n","sentences = read_pdf(file_name)\n","sentences_to_dict(sentences)\n","document_store = InMemoryDocumentStore(use_bm25=True)\n","document_store.write_documents(doc_dict)\n","retriever = BM25Retriever(document_store=document_store)\n","reader = FARMReader(model_name_or_path=\"deepset/roberta-base-squad2\", use_gpu=False)\n","pipe = ExtractiveQAPipeline(reader, retriever)"],"metadata":{"id":"4IzvLTaqaHx_","cellView":"form"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uFo7twb6VDMa","cellView":"form"},"outputs":[],"source":["#@title 3. Ask Questions\n","def get_answer(question):\n","  prediction = pipe.run(\n","                        query= question,\n","                        params={\n","                            \"Retriever\": {\"top_k\": 10},\n","                            \"Reader\": {\"top_k\": 1}\n","                            }\n","                        )\n","  print_answers(prediction, details=\"minimum\")\n","\n","while True:\n","    user_input = input(\"User: \")\n","    if user_input.lower() in ['exit', 'quit', 'bye', 'goodbye']:\n","        print(\"Chatbot: Goodbye!\")\n","        break\n","    get_answer(user_input)"]}]}